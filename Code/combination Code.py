import itertools

def permute_strings(strings, r):
    permutations = itertools.permutations(strings, r)
    return [' '.join(map(str, sublist)) for sublist in list(permutations)]

def combinations(s, r):
    n = len(s)
    if r == 0:
        return [[]]
    if n < r:
        return []
    result = []
    for i in range(n):
        element = s[i]
        rest = s[i+1:]
        for combination in combinations(rest, r-1):
            result.append([element] + combination)
    return result


def clean_for_city(combs):
    #clean pair like ["ঢাকা নরসিংদী ঢাকা গাজীপুর"]
    to_remove_word = ['ঢাকা', 'সিলেট', 'চট্টগ্রাম','খুলনা', 'রাজশাহী', 'রংপুর', 'ময়মনসিংহ']
    
    to_remove = []

    for s in combs:
        words = s.split()
        for w in to_remove_word:
            if s.count(w)>=2:
                to_remove.append(s)

    for s in to_remove:
        combs.remove(s)
    return combs

def give_gender_pair():
    s_gen_mar = ['বাবা মা', 'চাচা চাচী', 'দাদা দাদী', 'জেঠা জেঠী', 'নানা নানী', 'জেলে জেলেনি', 'ধোপা ধোপানি', 'বেদে বেদেনি', 'গুরু গুরুপত্নী', 'ছেলে ছেলেবঊ', 'বর কনে', 'বাদশা বেগম', 'কাঙ্গাল কাঙ্গালিনী', 'বাঘ বাঘিনী']
    s_gen_non_mar = ['যোগী যোগিনী', 'তেজস্বী তেজস্বিনী', 'কিশোর কিশোরী', 'নর নারী', 'সুন্দর সুন্দরী', 'গুণবান গুণবতী', 'পুণ্যবান পুণ্যবতী', 'বুদ্ধিমান বুদ্ধিমতী', 'শ্রীমান শ্রীমতী', 'বিজয় বিজয়িনী', 'পাঠক পাঠিকা', 'লেখক লেখিকা', 'গায়ক গায়িকা', 'খোকা খুকি', 'ছাত্র ছাত্রী', 'শিক্ষক শিক্ষিকা', 'নেতা নেত্রী', 'পাগল পাগলি', 'প্রিয় প্রিয়া', 'কনিষ্ঠ কনিষ্ঠা', 'লোক স্ত্রীলোক', 'শ্রমিক নারীশ্রমিক']

    return s_gen_mar+s_gen_non_mar


def give_city_pair():
    dhak = ['ঢাকা নরসিংদী', 'ঢাকা গাজীপুর', 'ঢাকা টাঙ্গাইল', 'ঢাকা নারায়ণগঞ্জ', 'ঢাকা শরীয়তপুর', 'ঢাকা কিশোরগঞ্জ', 'ঢাকা মানিকগঞ্জ', 'ঢাকা মুন্সীগঞ্জ', 'ঢাকা রাজবাড়ী', 'ঢাকা মাদারীপুর', 'ঢাকা গোপালগঞ্জ', 'ঢাকা ফরিদপুর']
    syl = ['সিলেট মৌলভীবাজার', 'সিলেট হবিগঞ্জ', 'সিলেট সুনামগঞ্জ']
    ctg = ['চট্টগ্রাম কুমিল্লা', 'চট্টগ্রাম ফেনী', 'চট্টগ্রাম ব্রাহ্মণবাড়িয়া', 'চট্টগ্রাম রাঙ্গামাটি', 'চট্টগ্রাম কক্সবাজার', 'চট্টগ্রাম চাঁদপুর', 'চট্টগ্রাম লক্ষ্মীপুর', 'চট্টগ্রাম নোয়াখালী', 'চট্টগ্রাম বান্দরবান', 'চট্টগ্রাম খাগড়াছড়ি']
    khul = ['খুলনা যশোর', 'খুলনা সাতক্ষীরা', 'খুলনা মেহেরপুর', 'খুলনা নড়াইল', 'খুলনা চুয়াডাঙ্গা', 'খুলনা কুষ্টিয়া', 'খুলনা মাগুরা', 'খুলনা বাগেরহাট', 'খুলনা ঝিনাইদহ']
    raj = ['রাজশাহী সিরাজগঞ্জ', 'রাজশাহী পাবনা', 'রাজশাহী বগুড়া', 'রাজশাহী নাটোর', 'রাজশাহী জয়পুরহাট', 'রাজশাহী চাঁপাইনবাবগঞ্জ', 'রাজশাহী নওগাঁ']
    rong = ['রংপুর পঞ্চগড়', 'রংপুর দিনাজপুর', 'রংপুর লালমনিরহাট', 'রংপুর নীলফামারী', 'রংপুর গাইবান্ধা', 'রংপুর ঠাকুরগাঁও', 'রংপুর কুড়িগ্রাম']
    mymen = ['ময়মনসিংহ শেরপুর', 'ময়মনসিংহ জামালপুর', 'ময়মনসিংহ নেত্রকোনা']
    all_pair = dhak+syl+ctg+khul+raj+rong+mymen
    return all_pair

def give_number_pair_ordinal():
    return ['এক প্রথম', 'দুই দ্বিতীয়', 'তিন তৃতীয়', 'চার চতুর্থ', 'পাঁচ পঞ্চম', 'ছয় ষষ্ঠ', 'সাত সপ্তম', 'আট অষ্টম', 'নয় নবম', 'দশ দশম', 'এগারো একাদশ', 'বারো দ্বাদশ', 'তেরো ত্রয়োদশ', 'চৌদ্দ চতুর্দশ', 'পনেরো পঞ্চদশ', 'ষোল ষোড়শ', 'সতেরো সপ্তদশ', 'আঠারো অষ্টাদশ', 'উনিশ উনবিংশ', 'বিশ বিংশ']

def give_number_pair_female():
    return ['এক প্রথমা', 'দুই দ্বিতীয়া', 'তিন তৃতীয়া', 'চার চতুর্থী', 'পাঁচ পঞ্চমী', 'ছয় ষষ্ঠী', 'সাত সপ্তমী', 'আট অষ্টমী', 'নয় নবমী', 'দশ দশমী', 'এগারো একাদশী', 'বারো দ্বাদশী', 'তেরো ত্রয়োদশী', 'চৌদ্দ চতুর্দশী', 'পনেরো পঞ্চদশী', 'ষোল ষোড়শী', 'সতেরো সপ্তদশী', 'আঠারো অষ্টাদশী']

def give_number_pair_date():
    return ['এক পহেলা', 'দুই দোসরা', 'তিন তেসরা', 'চার চৌঠা', 'পাঁচ পাঁচই', 'ছয় ছয়ই', 'সাত সাতই ', 'আট আটই', 'নয় নয়ই ', 'দশ দশই', 'এগারো এগারোই', 'বারো বারোই', 'তেরো তেরোই', 'চৌদ্দ চৌদ্দই', 'পনেরো পনেরোই', 'ষোল ষোলই', 'সতেরো সতেরোই', 'আঠারো আঠারোই', 'উনিশ উনিশে', 'বিশ বিশে', 'একুশ একুশে', 'বাইশ বাইশে', 'তেইশ তেইশে ', 'চব্বিশ চব্বিশে', 'পঁচিশ পঁচিশে', 'ছাব্বিশ ছাব্বিশে', 'সাতাশ সাতাশে', 'আটাশ আটাশে', 'ঊনত্রিশ  ঊনত্রিশে', 'ত্রিশ ত্রিশে', 'একত্রিশ একত্রিশে']

def give_plural_pair_noun():
    return ['আমি আমরা', 'তুমি তোমরা', 'সে তারা', 'তিনি তারা', 'শিক্ষক শিক্ষকরা', 'মাঝি মাঝিরা', 'ছাত্র ছাত্ররা', 'ধনী ধনীরা', 'ভাই ভাইয়েরা', 'শিক্ষক শিক্ষকেরা', 'গরু গরুগুলো', 'ছেলে ছেলেদের', 'মেয়ে মেয়েদের', 'ভাই ভাইসব', 'পাখি পাখিসব', 'সদস্য সদস্যগণ', 'সচিব সচিবগণ', 'দর্শক দর্শকবৃন্দ', 'শিক্ষক শিক্ষকবৃন্দ', 'সুধী সুধীমণ্ডলী', 'সম্পাদক সম্পাদকমণ্ডলী', 'পণ্ডিত পণ্ডিতবর্গ', 'মন্ত্রী মন্ত্রীবর্গ']

def give_plural_pair_obj():
    return ['বই বইগুলি', 'ঘর ঘরগুলি', 'ফুল ফুলগুলো', 'গ্রন্থ গ্রন্থসমূহ', 'বৃক্ষ বৃক্ষসমূহ', 'নিয়ম নিয়মাবলি', 'রচনা রচনাবলি', 'মেঘ মেঘমালা', 'পর্বত পর্বতমালা']

def give_prefix_pair():
    return ['রব নীরব', 'রস নীরস', 'রোগ নীরোগ']

def give_suffix_pair():
    a1 = ['বিবি বিবিয়ানা মুনশি মুনশিয়ানা', 'বাবু বাবুয়ানি শুন শুনানি', 'বেত বেতানো চাল চালানো', 'ভিখ ভিখারি ধুন ধুনারি', 'বোম বোমারু খোঁজ খোঁজারু', 'ঘাট ঘাটাল মাত মাতাল', 'জমক জমকালো রস রসালো', 'চাষ চাষি ভাজ ভাজি বাহাদুর বাহাদুরি', 'দিন দৈনিক চরিত্র চারিত্রিক', 'পঙ্ক পঙ্কিল সল সলিল', 'গ্রাম গ্রামীণ সর্বজন সর্বজনীন', 'রাষ্ট রাষ্টীয় মিশর মিশরীয়', 'পেট পেটুক মিশ্\u200c মিশুক', 'গর গরুড় লেজ লেজুড়', 'ঘর ঘরোয়া লাগ লাগোয়া', 'বাড়ি বাড়িওয়ালা রিকশা রিকশাওয়ালা', 'বাজি বাজিকর কারি কারিকর', 'ছাপা ছাপাখানা ডাক্তার ডাক্তারখানা', 'গিন্নি গিন্নিপনা বেহায়া বেহায়াপনা', 'ধান্দা ধান্দাবাজ ধোঁকা ধোঁকাবাজ', 'দয়া দয়াবান জ্ঞান জ্ঞানবান', 'মানান মানানসই চলন চলনসই']
    a2 = ['মুনশি মুনশিয়ানা বিবি বিবিয়ানা', 'শুন শুনানি বাবু বাবুয়ানি', 'চাল চালানো বেত বেতানো', 'ধুন ধুনারি ভিখ ভিখারি', 'খোঁজ খোঁজারু বোম বোমারু', 'মাত মাতাল ঘাট ঘাটাল', 'রস রসালো জমক জমকালো', 'ভাজ ভাজি বাহাদুর বাহাদুরি চাষ চাষি', 'চরিত্র চারিত্রিক দিন দৈনিক', 'সল সলিল পঙ্ক পঙ্কিল', 'সর্বজন সর্বজনীন গ্রাম গ্রামীণ', 'মিশর মিশরীয় রাষ্ট রাষ্টীয়', 'মিশ্\u200c মিশুক পেট পেটুক', 'লেজ লেজুড় গর গরুড়', 'লাগ লাগোয়া ঘর ঘরোয়া', 'রিকশা রিকশাওয়ালা বাড়ি বাড়িওয়ালা', 'কারি কারিকর বাজি বাজিকর', 'ডাক্তার ডাক্তারখানা ছাপা ছাপাখানা', 'বেহায়া বেহায়াপনা গিন্নি গিন্নিপনা', 'ধোঁকা ধোঁকাবাজ ধান্দা ধান্দাবাজ', 'জ্ঞান জ্ঞানবান দয়া দয়াবান', 'চলন চলনসই মানান মানানসই']
    return ['মুখ মুখখানি', 'অনেক অনেকখানি']

def give_affix_pair():
    return ['ভাই ভাইয়ের', 'বউ বউয়ের', 'লাউ লাউয়ের']

def give_comparative_pair():
    return ['বড় বড়তর', 'লম্বা লম্বতর', 'সুন্দর সুন্দরতর', 'ভালো ভালোতর', 'ছোট ছোটতর', 'বড় বড়তর', 'খারাপ খারাপতর', 'নিম্ন নিম্নতর', 'শীতল শীতলতর', 'গরম গরমতর', 'মন্দ মন্দতর', 'পূর্ণ পূর্ণতর', 'বৃহৎ বৃহত্তর', 'মহৎ মহত্তর', 'দীর্ঘ দীর্ঘতর', 'হীন হীনতর', 'ক্ষুদ্র ক্ষুদ্রতর', 'উন্নত উন্নততর', 'উচ্চ উচ্চতর', 'প্রিয় প্রিয়তর', 'মধুর মধুরতর', 'শ্রেয় শ্রেয়ান', 'লঘু লঘীয়ান', 'অল্প কনীয়ান']
def give_superlative_pair():
    return ['ছোট সবচেয়েছোট', 'বড় সবচেয়েবড়', 'লম্বা সবচেয়েলম্বা', 'সুন্দর সবচেয়েসুন্দর', 'ভালো সর্বশ্রেষ্ঠ', 'ছোট সর্বনিম্ন', 'বড় সর্বোচ্চ', 'খারাপ খারাপতম', 'নিম্ন সর্বনিম্ন', 'শীতল সর্বশীতল', 'গরম সর্বগরম', 'মন্দ সর্বমন্দ', 'পূর্ণ সর্বপূর্ণ', 'বৃহৎ বৃহত্তম', 'মহৎ মহত্তম', 'দীর্ঘ দীর্ঘতম', 'হীন হীনতম', 'ক্ষুদ্র ক্ষুদ্রতম', 'উন্নত উন্নততম', 'উচ্চ উচ্চতম', 'প্রিয় প্রিয়তম', 'মধুর মধুরতম', 'শ্রেয় শ্রেষ্ঠ', 'লঘু লঘিষ্ঠ', 'অল্প কনিষ্ঠ']

def give_antonym_adjective_pair():
    return ['অকর্মক সকর্মক', 'অক্ষম সক্ষম', 'অচল সচল', 'অচেতন সচেতন', 'অনুকূল প্রতিকূল', 'অনুরাগ বিরাগ', 'অহিংস সহিংস', 'আলস্য শ্রম', 'আসক্ত নিরাসক্ত', 'আস্তিক নাস্তিক', 'ইতর ভদ্র', 'উচ্চ নীচ', 'উৎকৃষ্ট নিকৃষ্ট', 'অতিকায় ক্ষুদ্রকায়', 'উন্নত অবনত', 'উন্নতি অবনতি', 'উপকারিতা অপকারিতা', 'উষ্ণ শীতল', 'কচি ঝুনা', 'কুৎসিত সুন্দর', 'কুশিক্ষা সুশিক্ষা', 'কৃতজ্ঞ অকৃতজ্ঞ', 'কোমল কঠিন', 'গণ্য নগণ্য', 'খুচরা পাইকারি', 'গরিষ্ঠ লঘিষ্ঠ', 'খ্যাতি অখ্যাতি', 'খ্যাত অখ্যাত', 'গঞ্জনা প্রশংসা', 'গরল অমৃত', 'গৌণ মুখ্য', 'চঞ্চল স্থির', 'জটিল সরল', 'জ্ঞানী মূর্খ', 'ঠুনকো মজবুত', 'দুরন্ত শান্ত', 'দুর্নাম সুনাম', 'দুর্ভাগ্য সৌভাগ্য', 'দেশী বিদেশী', 'ধূর্ত বোকা', 'দোষ গুণ', 'দোষী নির্দোষ', 'ধনাত্মক ঋণাত্মক', 'নতুন পুরাতন', 'নশ্বর অবিনশ্বর', 'নিরস সরস', 'মিথ্যা সত্য', 'বড় ছোট', 'সস্তা দামী', 'পরিষ্কার অপরিচ্ছন্ন', 'সহজ কঠিন', 'ভারী হালকা', 'গরম ঠান্ডা', 'ধনী দরিদ্র', 'অবিবাহিত বিবাহিত', 'ঠিক ভুল', 'নিরাপদ বিপজ্জনক', 'মসৃণ অমসৃণ', 'নরম কঠিন', 'লম্বা সংক্ষিপ্ত', 'দীর্ঘ সংক্ষিপ্ত', 'ভিজা শুকনো', 'পুরু পাতলা', 'প্রশস্ত সংকীর্ণ', 'আঁটসাঁট আলগা', 'ভালো খারাপ', 'খোলা বন্ধ', 'পরিষ্কার নোংরা', 'দামী সস্তা']

def give_antonym_misc_pair():
    return ['অতীত ভবিষ্যৎ', 'অলীক সত্য', 'আকর্ষণ বিকর্ষণ', 'আগমন প্রস্থান', 'আজ কাল', 'আদি অন্ত', 'আবশ্যক অনাবশ্যক', 'আরোহন অবরোহন', 'আলো আঁধার', 'আশীর্বাদ অভিশাপ', 'ইচ্ছুক অনিচ্ছুক', 'ইহকাল পরকাল', 'উত্তর দক্ষিণ', 'উত্তরায়ণ দক্ষিণায়ন', 'উত্থান পতন', 'উদয় অস্ত', 'অতিবৃষ্টি অনাবৃষ্টি', 'উজান ভাটি', 'উৎরাই চড়াই', 'উত্তীর্ণ অনুত্তীর্ণ', 'উপচয় অপচয়', 'ঊষা সন্ধ্যা', 'একাল সেকাল', 'একূল ওকূল', 'এখন তখন', 'কল্পনা বাস্তব', 'কুমেরু সুমেরু', 'ক্ষণস্থায়ী দীর্ঘস্থায়ী', 'কৃষ্ণাঙ্গ শ্বেতাঙ্গ', 'ঘৃণা শ্রদ্ধা', 'গোপন প্রকাশ', 'গুপ্ত প্রকাশিত', 'গ্রহণ বর্জন', 'গ্রাম্য শহুরে', 'চলিত সাধু', 'জন্ম মৃত্যু', 'জরিমানা বকশিশ', 'জলে স্থলে', 'জোয়ার ভাটা', 'দুর্লভ সুলভ', 'তিরস্কার পুরস্কার', 'তুষ্ট রুষ্ট', 'দিবা নিশি', 'দিবস রজনী', 'দীর্ঘায়ু স্বল্পায়ু', 'দূর নিকট', 'দেনা পাওনা', 'নিঃশ্বাস প্রশ্বাস', 'নির্দিষ্ট অনির্দিষ্ট', 'ন্যায় অন্যায়', 'পূর্ণিমা অমাবস্যা', 'প্রসারণ সংকোচন', 'বক্তা শ্রোতা', 'প্রারম্ভ শেষ', 'ভূমিকা উপসংহার', 'মৌখিক লিখিত', 'দূরে কাছে', 'ভিতরে বাইরে', 'আলো অন্ধকার', 'অনেক অল্প', 'ডান বাম', 'তরুণ বৃদ্ধ']

def give_old_new_pair():
    noun = ['জুতা জুতো', 'তুলা তুলো', 'পূজা পুজো', 'জ্যোৎস্না জোছনা', 'পুরোহিত পুরুত', 'শুষ্ক শুকনো', 'বন্য বুনো', 'হস্ত হাত', 'নাসিকা নাক', 'ঘৃত ঘি', 'ব্যাঘ্র বাঘ', 'শৃগাল শেয়াল', 'হস্তী হাতি', 'পক্ষী পাখি', 'মৎস্য মাছ', 'অগ্নি আগুন', 'বুড়া বুড়ো', 'সুতা সুতো', 'চন্দ্র চাঁদ']
    pronoun = ['তাঁহারা তাঁরা', 'তিনি সে', 'উহারা ওঁরা', 'তাহাকে তাকে', 'উহাকে ওকে', 'তাঁহার তাঁর', 'তাহার তার', 'যাহা যা', 'তাহা তা', 'যাহাদের যাদের', 'কেহ কেউ']
    verb = ['আসিয়া এসে', 'হইলাম হলাম', 'করিবার করবার', 'করিবার করার', 'পাইয়াছিলেন পেয়েছিলেন', 'গিয়াছিলেন গিয়েছেন', 'যাইয়াছিলেন যান', 'রহিয়াছে রয়েছে', 'হইলেন হলেন', 'হইল হল', 'হইয়া হয়', 'দেখিয়া দেখে', 'করিলেন করলেন', 'পড়িল পড়ল', 'পড়িল পড়লো', 'লাগিল লাগল', 'খুলিয়া খুলে', 'বলিয়া বলে', 'ভাঙিয়া ভেঙে', 'ভাঙাইতে তাঙতে', 'ফুটিয়া ফুটে', 'ছুটিতে ছুটতে']
    conj = ['পূর্বে আগে', 'পূর্বেই আগেই', 'অদ্য আজ', 'সহিত সাথে', 'দিয়া দিয়ে', 'অদ্যাপি আজও', 'তথাপি তবুও', 'নতুবা নইলে', 'নতুবা নাহলে', 'প্রায়শ প্রায়ই', 'যদ্যপি যদিও', 'কুত্রাপি কোথাও', 'কিঞ্চিৎ কিছু', 'কিঞ্চিৎ কিছুটা']
    return conj

def give_tense_pair():
    # original_list = [['করি', 'করো', 'করিস', 'করে', 'করেন'],
    #                 ['করছি', 'করছ', 'করছিস', 'করছে', 'করছেন'],
    #                 ['করেছি', 'করেছ', 'করেছিস', 'করেছে', 'করেছেন'],
    #                 ['করো', 'করিস', 'করুক', 'করুন'],
    #                 ['করলাম', 'করলে', 'করলি', 'করল', 'করলেন'],
    #                 ['করছিলাম', 'করছিলে', 'করছিলি', 'করছিল', 'করছিলেন'],
    #                 ['করেছিলাম', 'করেছিলে', 'করেছিলি', 'করেছিল', 'করেছিলেন'],
    #                 ['করতাম', 'করতে', 'করতি', 'করত', 'করতেন'],
    #                 ['করব', 'করবে', 'করবি', 'করবেন']]
    original_list = [['চলি', 'চলো', 'চলিস', 'চলে', 'চলেন'], ['চলছি', 'চলছ', 'চলছিস', 'চলছে', 'চলছেন'], ['চলেছই', 'চলেছও', 'চলেছিস', 'চলেছে', 'চলেছেন'], ['চলো', 'চলিস', 'চলুক', 'চলুন'], ['চললাম', 'চললে', 'চললি', 'চললে', 'চললেন'], ['চলছিলাম', 'চলছিলে', 'চলছিলি', 'চলছিল', 'চলছিলেন'], ['চলেছিলাম', 'চলেছিলে', 'চলেছিলি', 'চলেছিল', 'চলেছিলেন'], ['চলতাম', 'চলতে', 'চলতি', 'চলত', 'চলতেন'], ['চলব', 'চলবে', 'চলবি', 'চলবেন']]

    pairs = []
    for l in range(len(original_list[0])):
        for r in range(l+1, len(original_list[0])):
            pairs.extend([[lst[0], lst[1]] for lst in original_list])
    res = [' '.join(inner_list) for inner_list in pairs]
    return list(set(res))
if __name__=="__main__":
    #mikolov did permutation in dataset
    r = 2
    #gender pair permute
    # gen = give_gender_pair()
    # combs = permute_strings(gen, r)

    #city pair permute
    # city_pair = give_city_pair()
    # combs = permute_strings(city_pair, r)
    # combs = clean_for_city(combs)

    #Number pair permute
    # type_= 'Number_Female'
    # no = give_number_pair_female()
    # combs = permute_strings(no, r)

    # type_= 'Plural_Object'
    # no = give_plural_pair_obj()
    # combs = permute_strings(no, r)

    # type_= 'সাধু_চলিত_conj'
    # no = give_old_new_pair()
    # combs = permute_strings(no, r)

    type_ = 'Tense'
    no = give_tense_pair()
    combs = permute_strings(no, r)

    with open('../Data/'+type_+'.txt', 'a') as f:
        for sublist in combs:
            line = sublist + '\n'
            f.write(line)

    